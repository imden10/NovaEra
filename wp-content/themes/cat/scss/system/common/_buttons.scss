.btns-container {
	margin-top: var(--spacing-actions-top-m);
}

.btn, .cb-component {
	display: inline-flex;
	height: var(--button-medium-btn-height);
	min-width: var(--button-medium-min-width);
	padding: var(--button-medium-top-bottom) var(--button-medium-left-right);
	justify-content: center;
	align-items: center;
	gap: var(--button-medium-btn-gap);
	flex-shrink: 0;
	border-radius: var(--button-medium-btn-radius);
	text-align: center;
	leading-trim: both;
	text-edge: cap;
	font-size: 14px;
	font-style: normal;
	font-weight: 400;
	line-height: 100%;
	letter-spacing: 1.68px;
	text-transform: uppercase;
	cursor: pointer;
	transition: .3s;

	i {
		pointer-events: none;
		color: inherit;
	}

	&.disabled {
		pointer-events: none;
	}
}

@mixin set-btn-colors($bg, $bgHover, $bgDisabled, $border, $borderHover, $borderDisabled, $text, $textHover, $textDisabled) {
	color: var($text);

	@if $bg {
		background: var($bg)
	}

	@if $border {
		border: 1px solid var($border)
	}

	&:hover {
		color: var($textHover);

		@if $bg {
			background: var($bgHover)
		}

		@if $border {
			border: 1px solid var($borderHover)
		}
	}

	&.disabled {
		color: var($textHover);

		@if $bg {
			background: var($bgDisabled)
		}

		@if $border {
			border: 1px solid var($borderDisabled)
		}
	}
}


.on-dark {
	.btn {
		&.primary {
			&.fill {
				@include set-btn-colors(--btn-primary-on-dark-fill-bg-default,
					--btn-primary-on-dark-fill-bg-hover,
					--btn-primary-on-dark-fill-bg-disabled,
					false,
					false,
					false,
					--btn-primary-on-dark-fill-label-default,
					--btn-primary-on-dark-fill-label-hover,
					--btn-primary-on-dark-fill-label-disabled);
			}

			&.stroke {
				@include set-btn-colors(false,
					false,
					false,
					--btn-primary-on-dark-stroke-border-default,
					--btn-primary-on-dark-stroke-border-hover,
					--btn-primary-on-dark-stroke-border-disabled,
					--btn-primary-on-dark-stroke-label-default,
					--btn-primary-on-dark-stroke-label-hover,
					--btn-primary-on-dark-stroke-label-disabled);
			}

			&.simple,
			&.text {
				@include set-btn-colors(false, // У text нет фона
					--btn-primary-on-dark-text-bg-hover,
					--btn-primary-on-dark-text-bg-disabled,
					false,
					false,
					false,
					--btn-primary-on-dark-text-label-default, // Нет отдельного цвета текста для дефолтного состояния
					--btn-primary-on-dark-text-label-hover,
					--btn-primary-on-dark-text-label-disabled);
			}
		}

		&.secondary {
			&.fill {
				@include set-btn-colors(--btn-secondary-on-dark-fill-bg-default,
					--btn-secondary-on-dark-fill-bg-hover,
					--btn-secondary-on-dark-fill-bg-disabled,
					false,
					false,
					false,
					--btn-secondary-on-dark-fill-label-default,
					--btn-secondary-on-dark-fill-label-hover,
					--btn-secondary-on-dark-fill-label-disabled);
			}

			&.stroke {
				@include set-btn-colors(false,
					false,
					false,
					--btn-secondary-on-dark-stroke-border-default,
					--btn-secondary-on-dark-stroke-border-hover,
					--btn-secondary-on-dark-stroke-border-disabled,
					--btn-secondary-on-dark-stroke-label-default,
					--btn-secondary-on-dark-stroke-label-hover,
					--btn-secondary-on-dark-stroke-label-disabled);
			}

			&.simple,
			&.text {
				@include set-btn-colors(false,
					--btn-secondary-on-dark-text-bg-hover,
					--btn-secondary-on-dark-text-bg-disabled,
					false,
					false,
					false,
					--btn-secondary-on-dark-text-label-default,
					--btn-secondary-on-dark-text-label-hover,
					--btn-secondary-on-dark-text-label-disabled);
			}
		}
	}
}
.on-light {
	.btn {
		&.primary {
			&.fill {
				@include set-btn-colors(--btn-primary-on-light-fill-bg-default,
					--btn-primary-on-light-fill-bg-hover,
					--btn-primary-on-light-fill-bg-disabled,
					false,
					false,
					false,
					--btn-primary-on-light-fill-label-default,
					--btn-primary-on-light-fill-label-hover,
					--btn-primary-on-light-fill-label-disabled);
			}

			&.stroke {
				@include set-btn-colors(false,
					false,
					false,
					--btn-primary-on-light-stroke-border-default,
					--btn-primary-on-light-stroke-border-hover,
					--btn-primary-on-light-stroke-border-disabled,
					--btn-primary-on-light-stroke-label-default,
					--btn-primary-on-light-stroke-label-hover,
					--btn-primary-on-light-stroke-label-disabled);
			}

			&.simple,
			&.text {
				@include set-btn-colors(false, // У text нет фона
					--btn-primary-on-light-text-bg-hover,
					--btn-primary-on-light-text-bg-disabled,
					false, // У text нет границы
					false, // У text нет границы на hover
					false, // У text нет границы в disabled состоянии
					--btn-primary-on-light-text-label-default, // Нет отдельного цвета текста для дефолтного состояния
					--btn-primary-on-light-text-label-hover,
					--btn-primary-on-light-text-label-disabled);
			}
		}

		&.secondary {
			&.fill {
				@include set-btn-colors(--btn-secondary-on-light-fill-bg-default,
					--btn-secondary-on-light-fill-bg-hover,
					--btn-secondary-on-light-fill-bg-disabled,
					false,
					false,
					false,
					--btn-secondary-on-light-fill-label-default,
					--btn-secondary-on-light-fill-label-hover,
					--btn-secondary-on-light-fill-label-disabled);
			}

			&.stroke {
				@include set-btn-colors(false,
					false,
					false,
					--btn-secondary-on-light-stroke-border-default,
					--btn-secondary-on-light-stroke-border-hover,
					--btn-secondary-on-light-stroke-border-disabled,
					--btn-secondary-on-light-stroke-label-default,
					--btn-secondary-on-light-stroke-label-hover,
					--btn-secondary-on-light-stroke-label-disabled);
			}

			&.simple,
			&.text {
				@include set-btn-colors(false,
					--btn-secondary-on-light-text-bg-hover,
					--btn-secondary-on-light-text-bg-disabled,
					false,
					false,
					false,
					--btn-secondary-on-light-text-label-default,
					--btn-secondary-on-light-text-label-hover,
					--btn-secondary-on-light-text-label-disabled);
			}
		}
	}
}