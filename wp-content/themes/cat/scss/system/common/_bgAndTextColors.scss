@mixin setColors($textColor, $linkColor) {
	body {
		color: var($textColor)
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	p,
	code,
	span,
	.redactor {
		color: var($textColor) !important
	}

	a,
	.redactor a {
		color: var($linkColor) !important
	}
}

@mixin setBgColor($bg) {
	background: var($bg);
}

.on-light {

	&.bg-lighter,
	.bg-lighter {
		@include setBgColor(--bg-on-light-lighter);
		@include setColors(--text-on-light-bg-lighter-text-primary, --text-on-light-bg-lighter-link)
	}

	&.bg-darker, .bg-darker {
		@include setBgColor(--bg-on-light-darker);
		@include setColors(--text-on-light-bg-darker-text-primary, --text-on-light-bg-darker-link)
	}
}

.on-dark {

	&.bg-img,
	.bg-img {
		@include setColors(--text-on-dark-bg-img-text-primary, --text-on-dark-bg-img-link)
	}

	&.bg-lighter, .bg-lighter {
		@include setBgColor(--bg-on-dark-lighter);
		@include setColors(--text-on-dark-bg-lighter-text-primary, --text-on-dark-bg-lighter-link)
	}

	&.bg-darker, .bg-darker {
		@include setBgColor(--bg-on-dark-darker);
		@include setColors(--text-on-dark-bg-darker-text-primary, --text-on-dark-bg-darker-link)
	}

}

.bg-img {
	position: relative;
	background-size: cover;

	&>div:first-of-type {
		position: relative;
		z-index: 2;
	}

	&::before {
		content: '';
		position: absolute;
		inset: 0;
		z-index: 0;
		background-color: rgba(#000, .5);
	}
}